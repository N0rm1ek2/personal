# -*- coding: utf-8 -*-
"""School.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xXGJjOw_iyIiwHOmBTskTkFI4yxifuy1

![New York City schoolbus](schoolbus.jpg)

Photo by [Jannis Lucas](https://unsplash.com/@jannis_lucas) on [Unsplash](https://unsplash.com).
<br>

Every year, American high school students take SATs, which are standardized tests intended to measure literacy, numeracy, and writing skills. There are three sections - reading, math, and writing, each with a **maximum score of 800 points**. These tests are extremely important for students and colleges, as they play a pivotal role in the admissions process.

Analyzing the performance of schools is important for a variety of stakeholders, including policy and education professionals, researchers, government, and even parents considering which school their children should attend.

You have been provided with a dataset called `schools.csv`, which is previewed below.

You have been tasked with answering three key questions about New York City (NYC) public school SAT performance.
"""

# Re-run this cell
import pandas as pd

# Read in the data
schools = pd.read_csv("schools.csv")

# Preview the data
schools.head()

# Start coding here...

#Subset schools for "school_name" and "average_math"
school_math = schools[["school_name","average_math"]]

#Filter for best math results (>80%)
best_math_schools = school_math[school_math["average_math"] >= 800*0.8]

#Sort the DataFrame
best_math_schools = best_math_schools.sort_values('average_math',ascending=False)

#Write to CSV file
best_math_schools.to_csv('best_math_schools')

#Add "total_SAT" column
schools["total_SAT"] = schools['average_math'] + schools['average_reading'] + schools['average_writing']

#Subset schools "school_name" and "total_SAT"
top_schools = schools[['school_name','total_SAT']]

#filter top 10 schools
top_10_schools = top_schools.sort_values('total_SAT', ascending=False).head(10)
top_10_schools



# Which NYC borough has the highest standard deviation for total_SAT?
boroughs = schools.groupby("borough")["total_SAT"].agg(["count", "mean", "std"]).round(2)

# Filter for max std and make borough a column
largest_std_dev = boroughs[boroughs["std"] == boroughs["std"].max()]

# Rename the columns for clarity
largest_std_dev = largest_std_dev.rename(columns={"count": "num_schools", "mean": "average_SAT", "std": "std_SAT"})

#Move borough from index to column
largest_std_dev.reset_index(inplace=True)